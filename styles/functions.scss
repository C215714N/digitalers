@use "sass:math";
$functions: lineal, cuadratica, trigonometrica, exponencial, limite, vectorial;
.sea{
    position: relative;
    animation: sailing 3s alternate infinite;
    min-height: 100vh;
    padding: .5rem;
    gap: .5rem;
    overflow: hidden;
    .container{
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        animation: loading 360s linear infinite;
        .bubble{
            width: 3rem;
            height: 3rem;
            margin: .25rem;
            border-radius: 50%;
            box-shadow: 
                -.25rem .25rem .5rem var(--dark),
                -.25rem .25rem .5rem #eee8 inset;
            @for $i from 1 through 6 {
                $fn: nth($functions, $i);
                &:nth-child(#{$i}n){
                    animation: $fn 2s linear $i*.2s alternate infinite;
                    background: radial-gradient(
                        circle at top right,
                        hsl($i * 30, 50%, 50%, .5),
                        hsl($i * 60, 50%, 30%, .5)
                    );
                }
            }
        }
    }
}
@function getCoord($n,$f){
    $x:$n;
    $y:0;
    @if $f == lineal{ $y: $x / 2; }
    @if $f == cuadratica{ $y: math.pow($x - 50,2) / 25; }
    @if $f == trigonometrica{
        $x: ($n * 5);
        $y: math.sin($x) * 5
    }
    @if $f == exponencial{ $y: math.pow(1.05, $x); }
    @if $f == limite{
        @if $x != 50 { $y: (100 / ($x - 50)) / 2; }
    }
    @if $f == vectorial{ $y: math.pow($x - 50,3) / 1250; }
    @return translate($x * .5vw, $y * 1vh);
}
/* Animaciones */
@each $f in $functions {
@keyframes #{$f} {
    @for $i from 0 through 100 {
    #{$i}%{ transform: getCoord($i,$f); }
} } }
@keyframes sailing{
@for $i from 0 through 100 {
    #{$i}%{
        background-image: linear-gradient(
            ($i - 50)*.25deg, #248, #36c, #248
    ) }
} }