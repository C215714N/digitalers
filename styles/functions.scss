@use "sass:math";
$functions: lineal, cuadratica, trigonometrica, exponencial, limite;
.sea{
    position: relative;
    animation: sailing 3s alternate infinite;
    min-height: 100vh;
    padding: .5rem;
    gap: .5rem;
    overflow: hidden;
    .container{
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        animation: loading 360s linear infinite;
        .bubble{
            width: 3rem;
            height: 3rem;
            margin: .25rem;
            border-radius: 50%;
            box-shadow: 
                -.25rem .25rem .5rem var(--dark),
                -.25rem .25rem .5rem #eee8 inset;
            @for $i from 1 through 6 {
                $fn: nth($functions, $i);
                &:nth-child(#{$i}n){
                    animation: $fn 10s linear $i*.25s alternate infinite;
                    background: radial-gradient(
                        circle at top right,
                        hsl($i * 30, 50%, 50%, .5),
                        hsl($i * 60, 50%, 30%, .5)
                    );
                }
            }
        }
    }
}
@function getCoord($n, $fn){
    $x: $n;
    $y: 0;
    @if $fn == lineal{
        $y: $n / 2;
    }
    @if $fn == cuadratica{
        $x: $n - 50;
        $y: math.pow($x,2) / 250;
    }
    @if $fn == trigonometrica{
        $y: math.sin($x) * 20;
    }
    @if $fn == exponencial{
        $x: $n - 50;
        $y: math.pow(1.5, $x);
    }
    @if $fn == limite{
        
    }
    @return translate($x * 1vw, $y * 1vh);
}
/* Animaciones */
@each $f in $functions {
@keyframes #{$f} {
    @for $i from 0 through 100 {
        $x: $i;
        $y: $i;
        #{$i}%{ 
            transform: getCoord($i, $f); 
        }
} } }
@keyframes sailing{
@for $i from 0 through 100 {
    #{$i}%{
        background-image: linear-gradient(
            ($i - 50)*.25deg, #248, #36c, #248
        );
    }
} }